<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="LTIN204636" failures="0" tests="20" name="travelInsurance.TestRunner.InsuranceTestRunner" time="-1709056640.000" errors="1" timestamp="2024-02-27T23:27:00 IST" skipped="18">
  <testcase classname="travelInsurance.TestRunner.InsuranceTestRunner" name="runScenario" time="14.094">
    <skipped/>
  </testcase> <!-- runScenario -->
  <testcase classname="travelInsurance.TestRunner.InsuranceTestRunner" name="runScenario" time="0.000">
    <skipped/>
  </testcase> <!-- runScenario -->
  <testcase classname="travelInsurance.TestRunner.InsuranceTestRunner" name="runScenario" time="0.000">
    <skipped/>
  </testcase> <!-- runScenario -->
  <testcase classname="travelInsurance.TestRunner.InsuranceTestRunner" name="runScenario" time="0.001">
    <skipped/>
  </testcase> <!-- runScenario -->
  <testcase classname="travelInsurance.TestRunner.InsuranceTestRunner" name="runScenario" time="0.000">
    <skipped/>
  </testcase> <!-- runScenario -->
  <testcase classname="travelInsurance.TestRunner.InsuranceTestRunner" name="runScenario" time="0.000">
    <skipped/>
  </testcase> <!-- runScenario -->
  <testcase classname="travelInsurance.TestRunner.InsuranceTestRunner" name="runScenario" time="0.001">
    <skipped/>
  </testcase> <!-- runScenario -->
  <testcase classname="travelInsurance.TestRunner.InsuranceTestRunner" name="screenshot" time="-1709056640.000">
    <error message="
Can inject only one of &lt;ITestContext, XmlTest, Method, Object[], ITestResult&gt; into a @AfterMethod annotated screenshot.
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection" type="org.testng.TestNGException">
      <![CDATA[org.testng.TestNGException: 
Can inject only one of <ITestContext, XmlTest, Method, Object[], ITestResult> into a @AfterMethod annotated screenshot.
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection
at org.testng.internal.Parameters.checkParameterTypes(Parameters.java:436)
at org.testng.internal.Parameters.createParametersForMethod(Parameters.java:350)
at org.testng.internal.Parameters.createParameters(Parameters.java:693)
at org.testng.internal.Parameters.createConfigurationParameters(Parameters.java:166)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:306)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:810)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:779)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:755)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:481)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:840)
]]>
    </error>
  </testcase> <!-- screenshot -->
  <testcase classname="travelInsurance.TestRunner.InsuranceTestRunner" name="runScenario" time="0.000">
    <skipped/>
  </testcase> <!-- runScenario -->
  <testcase classname="travelInsurance.TestRunner.InsuranceTestRunner" name="runScenario" time="0.000">
    <skipped/>
  </testcase> <!-- runScenario -->
  <testcase classname="travelInsurance.TestRunner.InsuranceTestRunner" name="runScenario" time="0.000">
    <skipped/>
  </testcase> <!-- runScenario -->
  <testcase classname="travelInsurance.TestRunner.InsuranceTestRunner" name="runScenario" time="0.000">
    <skipped/>
  </testcase> <!-- runScenario -->
  <testcase classname="travelInsurance.TestRunner.InsuranceTestRunner" name="runScenario" time="0.000">
    <skipped/>
  </testcase> <!-- runScenario -->
  <testcase classname="travelInsurance.TestRunner.InsuranceTestRunner" name="runScenario" time="5.925"/>
  <testcase classname="travelInsurance.TestRunner.InsuranceTestRunner" name="runScenario" time="0.000">
    <skipped/>
  </testcase> <!-- runScenario -->
  <testcase classname="travelInsurance.TestRunner.InsuranceTestRunner" name="runScenario" time="0.000">
    <skipped/>
  </testcase> <!-- runScenario -->
  <testcase classname="travelInsurance.TestRunner.InsuranceTestRunner" name="runScenario" time="0.000">
    <skipped/>
  </testcase> <!-- runScenario -->
  <testcase classname="travelInsurance.TestRunner.InsuranceTestRunner" name="runScenario" time="0.000">
    <skipped/>
  </testcase> <!-- runScenario -->
  <testcase classname="travelInsurance.TestRunner.InsuranceTestRunner" name="runScenario" time="0.000">
    <skipped/>
  </testcase> <!-- runScenario -->
  <testcase classname="travelInsurance.TestRunner.InsuranceTestRunner" name="runScenario" time="0.000">
    <skipped/>
  </testcase> <!-- runScenario -->
</testsuite> <!-- travelInsurance.TestRunner.InsuranceTestRunner -->
